---
title: "Lab 5: Murder in SQL City"
author: "Stella Raymond"
format: html
editor: source
embed-resources: true
code-fold: true
echo: true
code-tools: true 
---

For this lab, you will be joining and filtering related datasets to solve a murder mystery!

## Instructions

Northwestern University's Knight Lab wanted to help sharpen users' database skills, so they created a murder mystery. Can you solve this crime in SQL City??

The relational data you will be working with contains tables with different pieces of information pertinent to the crime - people, social media check-ins, driver's licenses, crime scene reports, police interviews, and more!

![Database schema](https://mystery.knightlab.com/schema.png)

Solve the murder mystery, showing **all of your work in this document**. Your document and code must be well organized, easy to follow, and reproducible.

+ Use headers and written descriptions to indicate what you are doing.
+ Use `dplyr` verbs and `join` functions rather than just looking through the tables manually.
+ Use good code formatting practices.
+ Comment your code.
+ Cite any external sources you use to solve the mystery.

### Tips 

You may find the `pull()` function handy for displaying each clue as you go along.

## Access the Data

This code chunk will read in all of the tables of data for you. Don't modify or remove this!

```{r}
#| message: false
#| warning: false
#| label: read-in-data

library(tidyverse)

# If purrr is not detected, install the package
if (!"purrr" %in% installed.packages()) install.packages("purrr")

source("https://raw.githubusercontent.com/atheobold/groupworthy-data-science/main/labs/instructions/lab-5-setup.R")
```

## Solve the Crime

### Crime Scene Report

Detective Wickham reaches out to you...

> A crime has taken place and I need your help! There was a murder in SQL City sometime on January 15, 2018. Could you retrieve the crime scene report from the police departmentâ€™s database and follow the clues to find the person responsible for the murder?!

```{r}
#| label: inspecting-crime-scene-report
crime_scene_report |>
  mutate(date = ymd(date))|>
  filter(date == "2018-01-15",
         type == "murder",
         city == "SQL City") |>
  pull(description)
```

### Transcripts of the Witnesses

```{r}
#try
person |> 
  full_join(interview,
            join_by(id == person_id))|>
  filter(
    (address_street_name == "Northwestern Dr" & address_number == max(address_number)) |
    (address_street_name == "Franklin Ave" & str_detect(name, "Annabel"))
         )|>
    pull(transcript,
         name)
```

### Going to the Gym

```{r}
#| label: suspects
gym_names <- inner_join(get_fit_now_member, 
                        get_fit_now_check_in,
                        by = join_by(id == membership_id)
                        )|>
  select(name,
         id,
         membership_status,
         check_in_date
         )|>
  filter(str_detect(id, "^48Z"),
         membership_status == "gold")

inner_join(person,
           drivers_license,
           join_by(license_id == id)
           ) |>
  filter(str_detect(
         plate_number, "H42W"))|>
  select(name,
         id
         ) |>
  semi_join(gym_names,
            join_by(name == name)
            )|>
  inner_join(interview,
            join_by(id == person_id)
            )|>
  pull(transcript)
```


```{r}
#| label: find_person_responsible
#| message: false
inner_join(person,
           drivers_license,
           join_by(license_id == id)) |>
  inner_join(facebook_event_checkin,
           join_by(id == person_id)) |>
  inner_join(income, join_by(ssn == ssn)) |>
  mutate(comparative_income = mean(annual_income)) |>
  group_by(id)|>
  mutate(attendance = n()) |>
  select(id,
         hair_color,
         name,
         height,
         plate_number,
         car_make,
         car_model,
         attendance,
         ssn,
         annual_income,
         comparative_income) |>
  filter(hair_color == "red",
         height >= 65,
         height <= 67,
         car_make == "Tesla",
         car_model == "Model S") |>
  slice(1)|>
  pull(name,
       id)

jail <- "Miranda Priestly"
```

### Confirm Miranda
```{r}

```


**Follow the evidence to the person responsible for the murder, building a report as you go.**
Hint: Make sure you check for interviews with any suspects!

## And the final suspect is... *Miranda Priestly*
